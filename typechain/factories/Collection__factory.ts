/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Collection, CollectionInterface } from "../Collection";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "getCreatorTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenCreators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526007608081905266697066733a2f2f60c81b60a09081526200002a91600d9190620000ac565b503480156200003857600080fd5b50604051620023ce380380620023ce8339810160408190526200005b9162000209565b81518290829062000074906000906020850190620000ac565b5080516200008a906001906020840190620000ac565b50506001600b555050600c80546001600160a01b0319163317905550620002c6565b828054620000ba9062000273565b90600052602060002090601f016020900481019282620000de576000855562000129565b82601f10620000f957805160ff191683800117855562000129565b8280016001018555821562000129579182015b82811115620001295782518255916020019190600101906200010c565b50620001379291506200013b565b5090565b5b808211156200013757600081556001016200013c565b600082601f8301126200016457600080fd5b81516001600160401b0380821115620001815762000181620002b0565b604051601f8301601f19908116603f01168101908282118183101715620001ac57620001ac620002b0565b81604052838152602092508683858801011115620001c957600080fd5b600091505b83821015620001ed5785820183015181830184015290820190620001ce565b83821115620001ff5760008385830101525b9695505050505050565b600080604083850312156200021d57600080fd5b82516001600160401b03808211156200023557600080fd5b620002438683870162000152565b935060208501519150808211156200025a57600080fd5b50620002698582860162000152565b9150509250929050565b600181811c908216806200028857607f821691505b60208210811415620002aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6120f880620002d66000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb465146102bf578063b88d4fde146102d2578063c87b56dd146102e5578063d85d3d27146102f8578063e0fd045f1461030b578063e985e9c51461033457600080fd5b80636352211e1461025e57806370a082311461027157806374abfa54146102845780638da5cb5b146102a457806395d89b41146102b757600080fd5b806323b872dd1161010a57806323b872dd146101d65780632f745c59146101e957806340c1a064146101fc57806342842e0e1461022557806342966c68146102385780634f6ccce71461024b57600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101af57806318160ddd146101c4575b600080fd5b61015a610155366004611d17565b610347565b60405190151581526020015b60405180910390f35b610177610358565b6040516101669190611e8f565b610197610192366004611d9a565b6103ea565b6040516001600160a01b039091168152602001610166565b6101c26101bd366004611ced565b610477565b005b6009545b604051908152602001610166565b6101c26101e4366004611bf9565b610588565b6101c86101f7366004611ced565b6105ba565b61019761020a366004611d9a565b6000908152600f60205260409020546001600160a01b031690565b6101c2610233366004611bf9565b610650565b6101c2610246366004611d9a565b61066b565b6101c8610259366004611d9a565b6106e5565b61019761026c366004611d9a565b610778565b6101c861027f366004611bab565b6107ef565b610297610292366004611bab565b610876565b6040516101669190611e4b565b600c54610197906001600160a01b031681565b61017761089a565b6101c26102cd366004611cb1565b6108a9565b6101c26102e0366004611c35565b61096a565b6101776102f3366004611d9a565b6109a2565b6101c2610306366004611d51565b6109ad565b610197610319366004611d9a565b600f602052600090815260409020546001600160a01b031681565b61015a610342366004611bc6565b610afd565b600061035282610b2b565b92915050565b60606000805461036790611fb4565b80601f016020809104026020016040519081016040528092919081815260200182805461039390611fb4565b80156103e05780601f106103b5576101008083540402835291602001916103e0565b820191906000526020600020905b8154815290600101906020018083116103c357829003601f168201915b5050505050905090565b60006103f582610b50565b61045b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061048282610778565b9050806001600160a01b0316836001600160a01b031614156104f05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610452565b336001600160a01b038216148061050c575061050c8133610afd565b6105795760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610452565b6105838383610b6d565b505050565b610593335b82610bdb565b6105af5760405162461bcd60e51b815260040161045290611ef4565b610583838383610ca5565b60006105c5836107ef565b82106106275760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610452565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b6105838383836040518060200160405280600081525061096a565b6106743361058d565b6106d95760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610452565b6106e281610e3e565b50565b60006106f060095490565b82106107535760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610452565b6009828154811061076657610766612060565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103525760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610452565b60006001600160a01b03821661085a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610452565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b038116600090815260106020526040902060609061035290610e86565b60606001805461036790611fb4565b6001600160a01b0382163314156108fe5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610452565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109743383610bdb565b6109905760405162461bcd60e51b815260040161045290611ef4565b61099c84848484610e9a565b50505050565b606061035282610ecd565b6002600b541415610a005760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610452565b6002600b55600c546001600160a01b03163314610a4f5760405162461bcd60e51b815260206004820152600d60248201526c26bab9ba1031329037bbb732b960991b6044820152606401610452565b8051610a8e5760405162461bcd60e51b815260206004820152600e60248201526d456d70747920746f6b656e55524960901b6044820152606401610452565b610a9c600e80546001019055565b6000610aa7600e5490565b9050610ab3338261102f565b610abd818361104d565b336000908152601060205260409020610ad690826110d8565b506000908152600f6020526040902080546001600160a01b03191633179055506001600b55565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b14806103525750610352826110e4565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ba282610778565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610be682610b50565b610c475760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610452565b6000610c5283610778565b9050806001600160a01b0316846001600160a01b03161480610c8d5750836001600160a01b0316610c82846103ea565b6001600160a01b0316145b80610c9d5750610c9d8185610afd565b949350505050565b826001600160a01b0316610cb882610778565b6001600160a01b031614610d205760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610452565b6001600160a01b038216610d825760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610452565b610d8d838383611134565b610d98600082610b6d565b6001600160a01b0383166000908152600360205260408120805460019290610dc1908490611f71565b90915550506001600160a01b0382166000908152600360205260408120805460019290610def908490611f45565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716916000805160206120a383398151915291a4505050565b610e478161113f565b6000818152600f6020908152604080832080546001600160a01b031981169091556001600160a01b03168084526010909252909120610583908361117f565b60606000610e938361118b565b9392505050565b610ea5848484610ca5565b610eb1848484846111e7565b61099c5760405162461bcd60e51b815260040161045290611ea2565b6060610ed882610b50565b610f3e5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610452565b60008281526006602052604081208054610f5790611fb4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8390611fb4565b8015610fd05780601f10610fa557610100808354040283529160200191610fd0565b820191906000526020600020905b815481529060010190602001808311610fb357829003601f168201915b505050505090506000610fe16112f4565b9050805160001415610ff4575092915050565b81511561102657808260405160200161100e929190611ddf565b60405160208183030381529060405292505050919050565b610c9d84611303565b6110498282604051806020016040528060008152506113cd565b5050565b61105682610b50565b6110b95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610452565b6000828152600660209081526040909120825161058392840190611a4a565b6000610e938383611400565b60006001600160e01b031982166380ac58cd60e01b148061111557506001600160e01b03198216635b5e139f60e01b145b8061035257506301ffc9a760e01b6001600160e01b0319831614610352565b61058383838361144f565b61114881611507565b6000818152600660205260409020805461116190611fb4565b1590506106e25760008181526006602052604081206106e291611ace565b6000610e93838361159c565b6060816000018054806020026020016040519081016040528092919081815260200182805480156111db57602002820191906000526020600020905b8154815260200190600101908083116111c7575b50505050509050919050565b60006001600160a01b0384163b156112e957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061122b903390899088908890600401611e0e565b602060405180830381600087803b15801561124557600080fd5b505af1925050508015611275575060408051601f3d908101601f1916820190925261127291810190611d34565b60015b6112cf573d8080156112a3576040519150601f19603f3d011682016040523d82523d6000602084013e6112a8565b606091505b5080516112c75760405162461bcd60e51b815260040161045290611ea2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c9d565b506001949350505050565b6060600d805461036790611fb4565b606061130e82610b50565b6113725760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610452565b600061137c6112f4565b9050600081511161139c5760405180602001604052806000815250610e93565b806113a68461168f565b6040516020016113b7929190611ddf565b6040516020818303038152906040529392505050565b6113d7838361178d565b6113e460008484846111e7565b6105835760405162461bcd60e51b815260040161045290611ea2565b600081815260018301602052604081205461144757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610352565b506000610352565b6001600160a01b0383166114aa576114a581600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b6114cd565b816001600160a01b0316836001600160a01b0316146114cd576114cd83826118ba565b6001600160a01b0382166114e45761058381611957565b826001600160a01b0316826001600160a01b031614610583576105838282611a06565b600061151282610778565b905061152081600084611134565b61152b600083610b6d565b6001600160a01b0381166000908152600360205260408120805460019290611554908490611f71565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416906000805160206120a3833981519152908390a45050565b600081815260018301602052604081205480156116855760006115c0600183611f71565b85549091506000906115d490600190611f71565b90508181146116395760008660000182815481106115f4576115f4612060565b906000526020600020015490508087600001848154811061161757611617612060565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061164a5761164a61204a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610352565b6000915050610352565b6060816116b35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116dd57806116c781611fef565b91506116d69050600a83611f5d565b91506116b7565b60008167ffffffffffffffff8111156116f8576116f8612076565b6040519080825280601f01601f191660200182016040528015611722576020820181803683370190505b5090505b8415610c9d57611737600183611f71565b9150611744600a8661200a565b61174f906030611f45565b60f81b81838151811061176457611764612060565b60200101906001600160f81b031916908160001a905350611786600a86611f5d565b9450611726565b6001600160a01b0382166117e35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610452565b6117ec81610b50565b156118395760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610452565b61184560008383611134565b6001600160a01b038216600090815260036020526040812080546001929061186e908490611f45565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392906000805160206120a3833981519152908290a45050565b600060016118c7846107ef565b6118d19190611f71565b600083815260086020526040902054909150808214611924576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061196990600190611f71565b6000838152600a60205260408120546009805493945090928490811061199157611991612060565b9060005260206000200154905080600983815481106119b2576119b2612060565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806119ea576119ea61204a565b6001900381819060005260206000200160009055905550505050565b6000611a11836107ef565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b828054611a5690611fb4565b90600052602060002090601f016020900481019282611a785760008555611abe565b82601f10611a9157805160ff1916838001178555611abe565b82800160010185558215611abe579182015b82811115611abe578251825591602001919060010190611aa3565b50611aca929150611b04565b5090565b508054611ada90611fb4565b6000825580601f10611aea575050565b601f0160209004906000526020600020908101906106e291905b5b80821115611aca5760008155600101611b05565b600067ffffffffffffffff80841115611b3457611b34612076565b604051601f8501601f19908116603f01168101908282118183101715611b5c57611b5c612076565b81604052809350858152868686011115611b7557600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611ba657600080fd5b919050565b600060208284031215611bbd57600080fd5b610e9382611b8f565b60008060408385031215611bd957600080fd5b611be283611b8f565b9150611bf060208401611b8f565b90509250929050565b600080600060608486031215611c0e57600080fd5b611c1784611b8f565b9250611c2560208501611b8f565b9150604084013590509250925092565b60008060008060808587031215611c4b57600080fd5b611c5485611b8f565b9350611c6260208601611b8f565b925060408501359150606085013567ffffffffffffffff811115611c8557600080fd5b8501601f81018713611c9657600080fd5b611ca587823560208401611b19565b91505092959194509250565b60008060408385031215611cc457600080fd5b611ccd83611b8f565b915060208301358015158114611ce257600080fd5b809150509250929050565b60008060408385031215611d0057600080fd5b611d0983611b8f565b946020939093013593505050565b600060208284031215611d2957600080fd5b8135610e938161208c565b600060208284031215611d4657600080fd5b8151610e938161208c565b600060208284031215611d6357600080fd5b813567ffffffffffffffff811115611d7a57600080fd5b8201601f81018413611d8b57600080fd5b610c9d84823560208401611b19565b600060208284031215611dac57600080fd5b5035919050565b60008151808452611dcb816020860160208601611f88565b601f01601f19169290920160200192915050565b60008351611df1818460208801611f88565b835190830190611e05818360208801611f88565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e4190830184611db3565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611e8357835183529284019291840191600101611e67565b50909695505050505050565b602081526000610e936020830184611db3565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611f5857611f5861201e565b500190565b600082611f6c57611f6c612034565b500490565b600082821015611f8357611f8361201e565b500390565b60005b83811015611fa3578181015183820152602001611f8b565b8381111561099c5750506000910152565b600181811c90821680611fc857607f821691505b60208210811415611fe957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156120035761200361201e565b5060010190565b60008261201957612019612034565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146106e257600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206e47423d2fcd1b1a2b26ae75fc4a04c4a6ff2511da940cdf814adcd01db4692864736f6c63430008070033";

export class Collection__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Collection> {
    return super.deploy(name, symbol, overrides || {}) as Promise<Collection>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): Collection {
    return super.attach(address) as Collection;
  }
  connect(signer: Signer): Collection__factory {
    return super.connect(signer) as Collection__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionInterface {
    return new utils.Interface(_abi) as CollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collection {
    return new Contract(address, _abi, signerOrProvider) as Collection;
  }
}
