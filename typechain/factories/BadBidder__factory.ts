/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadBidder, BadBidderInterface } from "../BadBidder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_auction",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tux",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101ad3803806101ad83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b60f0806100bd6000396000f3fe608060405260043610601d5760003560e01c806357c90de514602557005b36602357005b005b602360303660046099565b60005460405163b7751c7160e01b815260048101849052602481018390526001600160a01b039091169063b7751c719083906044016000604051808303818588803b158015607d57600080fd5b505af11580156090573d6000803e3d6000fd5b50505050505050565b6000806040838503121560ab57600080fd5b5050803592602090910135915056fea26469706673582212203d7c8371c669548f13a0c31b529e6e6b18dbd0a18c93831242efeabc4b3ace2864736f6c63430008070033";

export class BadBidder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _auction: string,
    _tux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadBidder> {
    return super.deploy(_auction, _tux, overrides || {}) as Promise<BadBidder>;
  }
  getDeployTransaction(
    _auction: string,
    _tux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_auction, _tux, overrides || {});
  }
  attach(address: string): BadBidder {
    return super.attach(address) as BadBidder;
  }
  connect(signer: Signer): BadBidder__factory {
    return super.connect(signer) as BadBidder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadBidderInterface {
    return new utils.Interface(_abi) as BadBidderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadBidder {
    return new Contract(address, _abi, signerOrProvider) as BadBidder;
  }
}
