/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Auctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auctions__factory>;
    getContractFactory(
      name: "Collection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Collection__factory>;
    getContractFactory(
      name: "IAuctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuctions__factory>;
    getContractFactory(
      name: "ITux",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITux__factory>;
    getContractFactory(
      name: "BadBidder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadBidder__factory>;
    getContractFactory(
      name: "BadERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadERC721__factory>;
    getContractFactory(
      name: "TestERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC721__factory>;
    getContractFactory(
      name: "Tux",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tux__factory>;
    getContractFactory(
      name: "Tux",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tux__factory>;
    getContractFactory(
      name: "Auctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auctions__factory>;
    getContractFactory(
      name: "BadBidder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadBidder__factory>;
    getContractFactory(
      name: "BadERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadERC721__factory>;
    getContractFactory(
      name: "Collection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Collection__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IAuctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuctions__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ITux",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITux__factory>;
    getContractFactory(
      name: "TestERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC721__factory>;
    getContractFactory(
      name: "Tux",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tux__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
